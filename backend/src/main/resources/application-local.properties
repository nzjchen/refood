# port used to listen to requests
server.port=9499

# alternatively, use H2 (in-memory DB)
spring.datasource.driverClassName=org.h2.Driver
# # connection details
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
# # H2 needs a special dialect wrapper
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# # ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
spring.jpa.hibernate.ddl-auto=update
# enable GUI console (similar to myPHPAdmin)
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# Tell spring to read sql files that satisfies the antmatchers.
# Spring executes sql by alphabetical order, hence the alphabet at the start of each sql file.
spring.datasource.data=classpath*:*-data.sql

# print SQL statements
spring.jpa.properties.hibernate.format_sql=true

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# DGAA
# Stored as environment variables
DGAA_EMAIL=dgaa@refood.com
DGAA_PASSWORD=dgaapassword123

media.image.business.directory=./src/main/resources/media/images/businesses/
media.image.user.directory=./src/main/resources/media/images/users/
media.image.business_images.directory=./src/main/resources/media/images/business_images/